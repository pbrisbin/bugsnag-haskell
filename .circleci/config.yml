---
version: 2.0

references:
  stack_build: &stack_build
    docker:
      - image: fpco/stack-build:lts
    steps:
      - checkout
      - run:
          name: Digest
          command: |
            echo -- "${STACK_YAML}/${STACK_ARGUMENTS}" > rdigest
            git ls-files | xargs md5sum > sdigest
      - restore_cache:
          keys:
            - 1-{{ .Branch }}-{{ checksum "rdigest" }}-{{ checksum "sdigest" }}
            - 1-{{ .Branch }}-{{ checksum "rdigest" }}-
            - 1-{{ .Branch }}-
            - 1-master-
      - run:
          name: Dependencies
          command: |
            make setup

            if [ "${REPORT_COVERAGE:-0}" = 1 ]; then
              stack install cc-coverage
              curl -L "$CC_TEST_REPORTER_SRC" > ./cc-test-reporter
              chmod +x cc-test-reporter
            fi
          environment:
            # yamllint disable-line rule:line-length
            CC_TEST_REPORTER_SRC: https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64
          no_output_timeout: 120m
      - run:
          name: Build
          command: make build
      - save_cache:
          key: 1-{{ .Branch }}-{{ checksum "rdigest" }}-{{ checksum "sdigest" }}
          paths:
            - ~/.stack
            - ./.stack-work
      - run:
          name: Test
          command: |
            make test

            if [ "${REPORT_COVERAGE:-0}" = 1 ]; then
              tix2cc | ./cc-test-reporter upload-coverage --input -
            fi
      - run:
          name: Lint
          command: make lint

jobs:
  build_8.0.2:
    <<: *stack_build
    environment:
      STACK_ARGUMENTS: --no-terminal
      STACK_YAML: stack-lts-9.21.yaml
  build_8.2.2:
    <<: *stack_build
    environment:
      STACK_ARGUMENTS: --no-terminal
      STACK_YAML: stack-lts-11.19.yaml
  build_8.4.3:
    <<: *stack_build
    environment:
      STACK_ARGUMENTS: --no-terminal
      STACK_YAML: stack-lts-12.2.yaml
  build:
    <<: *stack_build
    environment:
      REPORT_COVERAGE: 1
      STACK_ARGUMENTS: --no-terminal
  build_nightly:
    <<: *stack_build
    environment:
      STACK_ARGUMENTS: --no-terminal --resolver nightly
      STACK_YAML: stack-nightly.yaml

workflows:
  version: 2
  commit:
    jobs:
      - build_8.0.2
      - build_8.2.2
      - build_8.4.3
      - build
      - build_nightly
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build_nightly
